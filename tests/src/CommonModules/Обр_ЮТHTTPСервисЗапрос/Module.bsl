//©///////////////////////////////////////////////////////////////////////////©//
//
//  Copyright 2021-2024 BIA-Technologies Limited Liability Company
//
//  Licensed under the Apache License, Version 2.0 (the "License");
//  you may not use this file except in compliance with the License.
//  You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
//  Unless required by applicable law or agreed to in writing, software
//  distributed under the License is distributed on an "AS IS" BASIS,
//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//  See the License for the specific language governing permissions and
//  limitations under the License.
//
//©///////////////////////////////////////////////////////////////////////////©//

#Область СлужебныйПрограммныйИнтерфейс

Процедура ИсполняемыеСценарии() Экспорт
	
	ЮТТесты
		.ДобавитьТест("Конструктор")
		.ДобавитьТест("УстановитьТело")
	;
	
КонецПроцедуры

Процедура Конструктор() Экспорт
	
	Запрос = ЮТест.Данные().HTTPСервисЗапрос()
		.ДобавитьЗаголовок("Заголовок", "Заголовок")
		.ДобавитьПараметрЗапроса("Параметр1", 1)
		.ДобавитьПараметрURL("Параметр2", 2)
		.Метод("GET");
	
	ЮТест.ОжидаетЧто(Запрос)
		.Свойство("HTTPМетод").Равно("GET")
		.Свойство("Заголовки.Заголовок").Равно("Заголовок")
		.Свойство("ПараметрыЗапроса.Параметр1").Равно(1)
		.Свойство("ПараметрыURL.Параметр2").Равно(2);
	
КонецПроцедуры

Процедура УстановитьТело() Экспорт
	
	Описание = "Тело не установлено";
	
	Запрос = ЮТест.Данные().HTTPСервисЗапрос();
	ЮТест.ОжидаетЧто(Запрос, Описание)
		.Метод("ПолучитьТелоКакДвоичныеДанные").НеВыбрасываетИсключение()
		.Метод("ПолучитьТелоКакПоток").НеВыбрасываетИсключение()
		.Метод("ПолучитьТелоКакСтроку").НеВыбрасываетИсключение()
		.Метод("ПолучитьТелоКакСтроку", ЮТКоллекции.ЗначениеВМассиве(КодировкаТекста.UTF8)).НеВыбрасываетИсключение();
	ЮТест.ОжидаетЧто(Запрос.ПолучитьТелоКакСтроку()).Равно("");
	
	Тело = "Тело";
	ДвоичныеДанные = ПолучитьДвоичныеДанныеИзСтроки(Тело);
	
	Описание = "Тело установлено из двоичных данных";
	Запрос = ЮТест.Данные().HTTPСервисЗапрос()
		.УстановитьТелоКакДвоичныеДанные(ДвоичныеДанные);
	
	ЮТест.ОжидаетЧто(Запрос.ПолучитьТелоКакДвоичныеДанные(), Описание + ". Получение двоичных данных").Равно(ДвоичныеДанные);
	ЮТест.ОжидаетЧто(Запрос.ПолучитьТелоКакСтроку(), Описание + ". Получение строки").Равно(Тело);
	ЮТест.ОжидаетЧто(Запрос.ПолучитьТелоКакСтроку("UTF-8"), Описание + ". Получение строки UTF-8").Равно(Тело);
	ЮТест.ОжидаетЧто(Запрос.ПолучитьТелоКакПоток(), Описание + ". Получение потока").ИмеетТип("Поток");
	
	Описание = "Тело установлено из строки";
	Запрос = ЮТест.Данные().HTTPСервисЗапрос()
		.УстановитьТелоКакСтроку(Тело);
	
	ЮТест.ОжидаетЧто(Запрос.ПолучитьТелоКакДвоичныеДанные(), Описание + ". Получение двоичных данных").Равно(ДвоичныеДанные);
	ЮТест.ОжидаетЧто(Запрос.ПолучитьТелоКакСтроку(), Описание + ". Получение строки").Равно(Тело);
	ЮТест.ОжидаетЧто(Запрос.ПолучитьТелоКакСтроку("UTF-8"), Описание + ". Получение строки UTF-8").Равно(Тело);
	ЮТест.ОжидаетЧто(Запрос.ПолучитьТелоКакПоток(), Описание + ". Получение потока").ИмеетТип("Поток");
	
	Описание = "Тело установлено из JSON";
	Запрос = ЮТест.Данные().HTTPСервисЗапрос()
		.УстановитьТелоКакСтрокуJSON(Новый Массив());
	ЮТест.ОжидаетЧто(Запрос.ПолучитьТелоКакСтроку(), Описание + ". Получение строки").Равно("[]");
	
КонецПроцедуры

#КонецОбласти
