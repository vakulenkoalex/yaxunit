//©///////////////////////////////////////////////////////////////////////////©//
//
//  Copyright 2021-2024 BIA-Technologies Limited Liability Company
//
//  Licensed under the Apache License, Version 2.0 (the "License");
//  you may not use this file except in compliance with the License.
//  You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
//  Unless required by applicable law or agreed to in writing, software
//  distributed under the License is distributed on an "AS IS" BASIS,
//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//  See the License for the specific language governing permissions and
//  limitations under the License.
//
//©///////////////////////////////////////////////////////////////////////////©//

#Область СлужебныйПрограммныйИнтерфейс

Процедура ИсполняемыеСценарии() Экспорт
	
	ЮТТесты
		.ДобавитьТест("ОбработчикСохранитьКодВозврата")
	;
		
КонецПроцедуры

Процедура ОбработчикСохранитьКодВозврата() Экспорт
	ФайлРезультата = ЮТест.Данные().НовоеИмяВременногоФайла("txt");
	
	ДополнительныеПараметры = ДополнительныеПараметрыТестирования(ФайлРезультата, МассивОшибок());
	ЮТИсполнительСлужебныйКлиент.ОбработчикСохранитьКодВозврата(Неопределено, ДополнительныеПараметры);
	
	ПроверитьРезультатВыполнения(ФайлРезультата, "0");
	
	ДополнительныеПараметры = ДополнительныеПараметрыТестирования(ФайлРезультата, МассивОшибок(Истина));
	ЮТИсполнительСлужебныйКлиент.ОбработчикСохранитьКодВозврата(Неопределено, ДополнительныеПараметры);
	
	ПроверитьРезультатВыполнения(ФайлРезультата, "1");
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ДополнительныеПараметрыТестирования(ИмяФайлаРезультата, МассивОшибок)
	Тесты = Тесты(МассивОшибок);
	НаборыТестов = НаборыТестов(Тесты);
	ОписаниеРезультата = ОписаниеРезультатаТестирования(НаборыТестов);
	
	ДополнительныеПараметры = ЮТИсполнительСлужебныйКлиент.ПараметрыИсполнения();
	ДополнительныеПараметры.Цепочка.Добавить(ЮТАсинхроннаяОбработкаСлужебныйКлиент.НовыйПустойОбработчик(2));
	ДополнительныеПараметры.АргументыЗапуска = "";
	ДополнительныеПараметры.ИсполняемыеТестовыеМодули = Новый Массив;
	
	Параметры = Новый Структура;
	Параметры.Вставить("exitCode", ИмяФайлаРезультата);
	
	ДополнительныеПараметры.ПараметрыЗапуска = Параметры;
	ДополнительныеПараметры.РезультатыТестирования = Новый Массив;
	ДополнительныеПараметры.РезультатыТестирования.Добавить(ОписаниеРезультата);
	
	Возврат ДополнительныеПараметры;
КонецФункции

Функция МассивОшибок(ДобавлятьУпавшийТест = Ложь)
	Ошибки = Новый Массив;
	ОписаниеОшибки = ЮТФабрикаСлужебный.ОписаниеВозникшейОшибки("Метод пропущен");
	ОписаниеОшибки.ТипОшибки = ЮТФабрикаСлужебный.ТипыОшибок().Пропущен;
	Ошибки.Добавить(ОписаниеОшибки);
	
	Если ДобавлятьУпавшийТест Тогда
		ОписаниеОшибки = ЮТФабрикаСлужебный.ОписаниеВозникшейОшибки("Ошибка исполнения");
		ОписаниеОшибки.ТипОшибки = ЮТФабрикаСлужебный.ТипыОшибок().Исполнения;
		Ошибки.Добавить(ОписаниеОшибки);
	КонецЕсли;
	
	Возврат Ошибки;
КонецФункции

Функция Тесты(МассивОшибок)
	Тесты = Новый Массив;
	Тесты.Добавить(Новый Структура("Ошибки", МассивОшибок));
	
	Возврат Тесты;
КонецФункции

Функция НаборыТестов(Тесты)
	НаборыТестов = Новый Массив;
	НаборыТестов.Добавить(Новый Структура("Тесты, Ошибки", Тесты, Новый Массив));
	
	Возврат НаборыТестов;
КонецФункции

Функция ОписаниеРезультатаТестирования(НаборыТестов)
	ОписаниеРезультата = Новый Структура;
	ОписаниеРезультата.Вставить("МетаданныеМодуля", Неопределено);
	ОписаниеРезультата.Вставить("НаборыТестов", НаборыТестов);
	ОписаниеРезультата.Вставить("Ошибки", Новый Массив);
	ОписаниеРезультата.Вставить("НастройкиВыполнения", Неопределено);
	
	Возврат ОписаниеРезультата;
КонецФункции

Процедура ПроверитьРезультатВыполнения(ИмяФайлаРезультата, ОжидаемыйРезультат)
	РезультатВыполнения = СокрЛП(ЮТОбщий.ДанныеТекстовогоФайла(ИмяФайлаРезультата));
	ЮТест.ОжидаетЧто(РезультатВыполнения)
		.ИмеетТип("Строка")
		.Равно(ОжидаемыйРезультат)
	;
КонецПроцедуры

#КонецОбласти
