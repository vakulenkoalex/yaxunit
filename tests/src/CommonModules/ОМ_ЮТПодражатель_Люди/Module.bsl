//©///////////////////////////////////////////////////////////////////////////©//
//
//  Copyright 2021-2023 BIA-Technologies Limited Liability Company
//
//  Licensed under the Apache License, Version 2.0 (the "License");
//  you may not use this file except in compliance with the License.
//  You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
//  Unless required by applicable law or agreed to in writing, software
//  distributed under the License is distributed on an "AS IS" BASIS,
//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//  See the License for the specific language governing permissions and
//  limitations under the License.
//
//©///////////////////////////////////////////////////////////////////////////©//

#Область СлужебныйПрограммныйИнтерфейс

Процедура ИсполняемыеСценарии() Экспорт

	ЮТТесты
		.ДобавитьТестовыйНабор("ИменаЛюдей")
			.ДобавитьТест("Имя")
			.ДобавитьТест("Фамилия")
			.ДобавитьТест("Отчество")
			.ДобавитьТест("ФИО")
			.ДобавитьТест("ИНН")
			.ДобавитьТест("СНИЛС")
		.ДобавитьТестовыйНабор("Локализации")
			.ДобавитьТест("УстановкаЛокализации")
			.ДобавитьТест("НесуществующийСловарьПоЛокализации")
		.ДобавитьТестовыйНабор("Некорректные параметры")
			.ДобавитьТест("НереализованныйПолЧеловека")
	;

КонецПроцедуры

#Область События

Процедура ПередВсемиТестами() Экспорт

КонецПроцедуры

Процедура ПередКаждымТестом() Экспорт

КонецПроцедуры

Процедура ПослеКаждогоТеста() Экспорт

КонецПроцедуры

Процедура ПослеВсехТестов() Экспорт

КонецПроцедуры

#КонецОбласти

Процедура Имя() Экспорт
	Имя = ЮТест.Данные().Подражатель().Люди().Имя();
	ЮТест.ОжидаетЧто(Имя)
		.ИмеетТип("Строка")
		.Заполнено()
	;

	ЮТест.ОжидаетЧто(СтрДлина(Имя))
		.Больше(1)
	;
КонецПроцедуры

Процедура Фамилия() Экспорт
	Фамилия = ЮТест.Данные().Подражатель().Люди().Фамилия();
	ЮТест.ОжидаетЧто(Фамилия)
		.ИмеетТип("Строка")
		.Заполнено()
	;

	ЮТест.ОжидаетЧто(СтрДлина(Фамилия))
		.Больше(1)
	;
КонецПроцедуры

Процедура Отчество() Экспорт
	Отчество = ЮТест.Данные().Подражатель().Люди().Отчество();
	ЮТест.ОжидаетЧто(Отчество)
		.ИмеетТип("Строка")
		.Заполнено()
	;

	ЮТест.ОжидаетЧто(СтрДлина(Отчество))
		.Больше(1)
	;
КонецПроцедуры

Процедура ФИО() Экспорт
	ФИО = ЮТест.Данные().Подражатель().Люди().ФИО();
	ЮТест.ОжидаетЧто(ФИО)
		.ИмеетТип("Строка")
		.Заполнено()
	;

	ЮТест.ОжидаетЧто(СтрРазделить(ФИО, " "))
		.ИмеетДлину(3)
	;
КонецПроцедуры

Процедура ИНН() Экспорт
	ИНН = ЮТест.Данные().Подражатель().Люди().ИНН();
	ЮТест.ОжидаетЧто(ИНН)
		.ИмеетТип("Строка")
		.Заполнено()
		.ИмеетДлину(12)
	;
КонецПроцедуры

Процедура СНИЛС() Экспорт
	СНИЛС = ЮТест.Данные().Подражатель().Люди().СНИЛС();
	ЮТест.ОжидаетЧто(СНИЛС)
		.ИмеетТип("Строка")
		.Заполнено()
		.ИмеетДлину(14)
	;
КонецПроцедуры

Процедура УстановкаЛокализации() Экспорт

	Подражатель = ЮТест.Данные().Подражатель();
	ЮТест.ОжидаетЧто(Подражатель.Локализация())
		.Равно("ru")
	;
	Подражатель.УстановитьЛокализацию("en");

	ЮТест.ОжидаетЧто(Подражатель.Локализация())
		.Равно("en")
	;

КонецПроцедуры

Процедура НесуществующийСловарьПоЛокализации() Экспорт
	Подражатель = ЮТест.Данные().Подражатель();
	Подражатель.УстановитьЛокализацию("en");
	Ютест.ОжидаетЧто(ЮТПодражатель_Люди)
		.Метод("Имя")
		.ВыбрасываетИсключение("не найден")
	;
КонецПроцедуры

Процедура НереализованныйПолЧеловека() Экспорт
	Подражатель = ЮТест.Данные().Подражатель();
	Ютест.ОжидаетЧто(ЮТПодражатель_Люди)
		.Метод("Имя", ЮТОбщий.ЗначениеВМассиве("ТрансгендернаяДевушкаОлень"))
		.ВыбрасываетИсключение("Отсутствует реализация словаря")
	;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#КонецОбласти
